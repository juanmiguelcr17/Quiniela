@model QuinielaMVC4.Models.RegisterModel

@{
    ViewBag.Title = "Quiniela | Registro";
}

<div class="page-header">
    <div class="container">
        <h2>Crear una nueva cuenta</h2>
        <p>
            Llena el formulario para crear una nueva cuenta.
        </p>
        <p class="text-info">
            La contraseña debe de tener al menos @Membership.MinRequiredPasswordLength caracteres de longitud.
        </p>
        
        <div class="col-md-8">
            <div class="well bs-component">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "No se pudo crear la cuenta. Por favor verifica la información e intenta nuevamente.")
                    
                        <h3>Información de la cuenta</h3>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(m => m.UserName, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-10">
                                @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-10">
                                @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 text-right">
                                <input type="submit" value="Registrarse" class="btn btn-danger" />
                            </div>
                        </div>
                    
                }
            </div>
        </div>
    </div>
</div>
